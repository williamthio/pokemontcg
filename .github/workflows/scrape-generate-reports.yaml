name: Scrape and Generate Reports

on:
  workflow_dispatch:
    inputs:
      end_tournament_id:
        description: 'End Tournament ID'
        required: true

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  run-scrape-and-generate-reports:
    runs-on: ubuntu-latest

    outputs:
      changes: ${{ steps.commit-and-push.outputs.changes }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run scrape.py
      run: python scrape.py ${{ github.event.inputs.end_tournament_id }}
    
    - name: Remove old reports
      run: rm -rf reports/*

    - name: Generate reports from CSV
      run: |
        while IFS=',' read -r main_pokemon secondary_pokemon min_rank; do
          if [[ "$main_pokemon" != "mainpokemon" ]]; then
            python analyze.py --main_pokemon "$main_pokemon" --secondary_pokemon "$secondary_pokemon" --min_rank "$min_rank"
          fi
        done < reportrequirements.csv

    - name: Update README with report links
      run: |
        echo "# Pokémon TCG Deck Analysis" > README.md
        echo "" >> README.md
        echo "This project analyzes Pokémon TCG decks and generates a report on card distributions and deck information." >> README.md
        echo "" >> README.md
        echo "## Available Reports" >> README.md
        for file in reports/*.md; do
          echo "- [$(basename $file)]($file)" >> README.md
        done

    - name: Commit and push changes
      id: commit-and-push
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add tournament_decks.csv progress.txt
        git add README.md
        git add -u reports/*.md
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Add or update markdown files and README"
          git push
          echo "changes=true" >> "$GITHUB_OUTPUT"
        else
          echo "No changes to commit"
          echo "changes=false" >> "$GITHUB_OUTPUT"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-github-pages:
    needs: run-scrape-and-generate-reports
    if: needs.run-scrape-and-generate-reports.outputs.changes == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
